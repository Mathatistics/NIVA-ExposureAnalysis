---
title: "Spatio-Temporal Exposure Analysis"
author: "Raju Rimal"
date: "`r Sys.Date()`"
code-fold: true
format: 
  html: default
  gfm: default
---

```{r}
#| label: setup
#| include: false
pkgs <- c(
  "tidytable", "ggplot2", "webchem",
  "readxl", "purr", "stringr",
  "csmaps", "ggmap", "csdata"
)
for (pkg in pkgs) {
  require(pkg, character.only = TRUE, quietly = TRUE)
}

site_data <- read_excel("Exposure_data_AEP.xlsx", sheet = 3) %>% 
  as_tidytable()
exposure_data <- fread("Exposure_data_AEP.csv") %>% 
  as_tidytable()
```

```{r}
#| label: local function
#| code-summary: Local functions

get_tissue_conc <- function(cw, logp) {
  cf <- cw * 10 ^(0.76 * logp - 0.23)
  return(cf)
}
```

## Dataset

In this analysis we will use the exposure data available at [zenodo ((https://doi.org/10.5281/zenodo.11093687))](https://zenodo.org/records/11093687 "Spatio-temporal dataset - Exposure data"). The dataset contains exposure information from 6-location in Norway from the year 2019.

```{r}
#| label: Map sample site
#| code-summary: Sample sites in Norway
#| out-width: "100%"
#| fig-height: 7
csmaps::nor_municip_map_b2020_split_dt %>% 
  ggplot(aes(long, lat, group = group)) +
  geom_polygon(fill = NA, color = "darkgrey", linewidth = 0.1) +
  geom_label(
    data = site_data, 
    aes(x = LONGITUDE, y = LATITUDE, label = SITE_NAME),
    group = 1,
    size = rel(3),
    hjust = -0.1,
    label.r = unit(2.5, "pt")
  ) +
  geom_point(
    data = site_data, 
    aes(x = LONGITUDE, y = LATITUDE),
    group = 1,
    color = "firebrick"
  ) +
  theme_void() +
  coord_map() +
  labs(
    title = "Monitoring sites of Spatio-temporal exposure data",
    subtitle = "Year: 2019, Country: Norway"
  )
```

In each of these locations, levels of various stressors were measured in [`r exposure_data[, knitr::combine_words(unique(ENVIRONMENTAL_COMPARTMENT))]`] between dates [`r exposure_data[, knitr::combine_words(format(range(SAMPLE_DATE), "%B %d, %Y"))]`]. 

Further, the chemical properties of stressor such as "MolecularWeight" and partition coefficient (LogP or XLogP) are extracted using `webchem::pc_prop` command from `webchem` package using compound ID. The Compound ID were fetched using the command `webchem::get_cid` using the `INCHIKEY` variable available in the dataset.

The effect of these stressor were also calculated in fish tissues using the level of water concentration and partition coefficient (XLotP) as,

$$\texttt{fish concentration} = \texttt{water concentration} \times 10 ^{0.76 \times \log P - 0.23}, \text{unit: ug/Kg}$$

```{r}
#| label: concentration in fish tissue
#| code-summary: Calculate stressor concentration in fish tissue

exposure_data <- exposure_data %>% 
  mutate(FishConc = get_tissue_conc(MEASURED_VALUE, XLogP))
```

The average level of contration of each stressor in these location is as follows.

## Average level of stressor

```{r}
#| label: Average exposure
#| code-summary: Average concentration of stressor in each site
#| out-width: "100%"
#| fig-width: 9
#| fig-asp: 0.9
#| warning: false
#| 
exposure_data %>% 
  rename(WaterConc = MEASURED_VALUE) %>% 
  pivot_longer(cols = ends_with("Conc")) %>% 
  group_by(STRESSOR_NAME, SITE_NAME, name) %>% 
  summarize(across(value, function(x) {
    Hmisc::smean.cl.normal(x) %>% 
      as.list() %>% 
      bind_cols() %>% 
      list()
  })) %>% 
  unnest() %>% 
  ggplot(aes(Mean, STRESSOR_NAME, color = name)) +
  facet_grid(cols = vars(SITE_NAME)) +
  geom_pointrange(
      aes(xmin = Lower, xmax = Upper),
      shape = 21, fill = "whitesmoke",
      stroke = 1
  ) +
  scale_x_log10(breaks = scales::breaks_log(4)) +
  scale_color_brewer(
    palette = "Set1",
    labels = c(
      WaterConc = "Water concentration (ug/L)",
      FishConc = "Fish concentration (ug/Kg)"
    )
  ) +
  ggthemes::theme_few() +
  theme(
      panel.grid = element_line(color = "#f0f0f0"),
      legend.position = "bottom",
      legend.justification = "left"
  ) +
  labs(
      x = "log10(Contration level)",
      title = "Average contration of stressors in each location",
      y = NULL,
      color = NULL
  )
```

```{r}
#| label: Average exposure heatmap
#| code-summary: Average concentration of stressor (heatmap)
#| out-width: "100%"
#| fig-width: 10
#| fig-asp: 0.6
#| 
exposure_data %>%
  rename(WaterConc = MEASURED_VALUE) %>% 
  pivot_longer(cols = ends_with("Conc")) %>% 
  group_by(SITE_NAME, STRESSOR_NAME, name) %>% 
  summarize(across(value, function(x) {
    Hmisc::smean.cl.normal(x) %>% 
      as.list() %>% 
      bind_cols() %>% 
      list()
  })) %>% 
  unnest() %>% 
  ggplot(aes(STRESSOR_NAME, SITE_NAME, fill = Mean)) +
  facet_grid(rows = vars(name), labeller = labeller(
    name = c(
      FishConc = "Fish\nconcentration\n(ug/Kg)",
      WaterConc = "Water\nconcentration\n(ug/L)"
    )
  )) +
  geom_tile(color = "#f0f0f0", linewidth = 0.1) +
  scale_fill_viridis_c(
    trans = "log", na.value = "white", 
    breaks = scales::breaks_log(10),
    labels = \(x) formatC(x, format = "f", flag = 0, digits = 3),
    guide = guide_colorbar(barwidth = unit(0.8, "npc"))
  ) +
  scale_x_discrete(guide = guide_axis(angle = 45)) +
  coord_equal() +
  ggthemes::theme_few() +
  theme(
    legend.position = "top"
  ) +
  labs(y = NULL, x = NULL, fill = NULL)
```


## Distribution of concentration

Water concentration (ug/L) of these stressor are skewed towards zero with long right tail. In one of the location (Timebekken), because of small sample size, the distribution is not clear.

```{r}
#| label: Distribution of measured values
#| code-summary: Distribution of concentration level
#| out-width: "100%"
#| warning: false
#| fig-width: 9
#| fig-asp: 0.6
#| 
exposure_data %>% 
  rename(WaterConc = MEASURED_VALUE) %>% 
  pivot_longer(cols = ends_with("Conc")) %>% 
  ggplot(aes(value)) +
  facet_grid(
    rows = vars(name),
    cols = vars(SITE_NAME), 
    scales = "free",
    labeller = labeller(
    name = c(
      FishConc = "Fish concentration\n(ug/Kg)",
      WaterConc = "Water concentration\n(ug/L)"
    )
    )
  ) +
  geom_histogram(
    aes(y = after_stat(density)), 
    bins = 10, linewidth = 0.5,
    fill = "whitesmoke", 
    color = "#3d3d3d"
  ) +
  geom_density(color = "forestgreen", linewidth = 1) +
  geom_rug(length = unit(5, "pt"), alpha = 0.5) +
  scale_x_log10(breaks = scales::breaks_log(4)) +
  ggthemes::theme_few() +
  theme(panel.grid = element_line(color = "#f0f0f0")) +
  labs(
    x = "log10(Stressor concentration)",
    y = "Density"
  )
```

## Shiny App for Exploration

A [shiny app](https://therimalaya.shinyapps.io/NIVA-AppExposure/) can help to explore the data further. To run the shiny app from the local computer,

```{r}
#| eval: false
#| echo: true
#| code-summary: Run Shiny Application
#| code-fold: show
shiny::runGitHub(
  username = "Mathatistics", 
  repo = "NIVA-ExposureAnalysis", 
  subdir = "ShinyApp/",
  ref = "main"
)
```



